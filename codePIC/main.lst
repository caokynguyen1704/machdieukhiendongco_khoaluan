CCS PCM C Compiler, Version 5.025, 22679               07-Mar-21 18:28

               Filename:   D:\DoAn\machdieukhiendongco_khoaluan\codePIC\main.lst

               ROM used:   110 words (1%)
                           Largest free fragment is 2048
               RAM used:   8 (2%) at main() level
                           9 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses HS,NOWDT,NOPROTECT,NOLVP 
.................... #device ADC = 10 
.................... #use delay(clock = 12000000) 
0004:  MOVLW  23
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  03
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  E3
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  NOP
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
....................   
.................... unsigned int16 i ; 
.................... void main(){ 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  MOVLW  FF
001D:  MOVWF  22
001E:  BSF    03.5
001F:  BSF    1F.0
0020:  BSF    1F.1
0021:  BSF    1F.2
0022:  BCF    1F.3
0023:  MOVLW  07
0024:  MOVWF  1C
0025:  BCF    03.7
....................   setup_adc(ADC_CLOCK_DIV_32);          
0026:  BCF    1F.6
0027:  BCF    03.5
0028:  BCF    1F.6
0029:  BSF    1F.7
002A:  BSF    03.5
002B:  BSF    1F.7
002C:  BCF    03.5
002D:  BSF    1F.0
....................   setup_adc_ports(AN0);                   
002E:  BSF    03.5
002F:  BCF    1F.0
0030:  BSF    1F.1
0031:  BSF    1F.2
0032:  BSF    1F.3
....................   set_adc_channel(0);                   
0033:  MOVLW  00
0034:  MOVWF  78
0035:  BCF    03.5
0036:  MOVF   1F,W
0037:  ANDLW  C7
0038:  IORWF  78,W
0039:  MOVWF  1F
....................   setup_ccp1(CCP_PWM);                   
003A:  BCF    22.2
003B:  MOVF   22,W
003C:  BSF    03.5
003D:  MOVWF  07
003E:  BCF    03.5
003F:  BCF    07.2
0040:  MOVLW  0C
0041:  MOVWF  17
....................   setup_timer_2(T2_DIV_BY_16,125,1);//125=12000000/(Hz*16*4) =>1k4 Hz 
0042:  MOVLW  00
0043:  MOVWF  78
0044:  IORLW  06
0045:  MOVWF  12
0046:  MOVLW  7D
0047:  BSF    03.5
0048:  MOVWF  12
....................   delay_ms(100);             
0049:  MOVLW  64
004A:  BCF    03.5
004B:  MOVWF  23
004C:  CALL   004
....................   while(TRUE){ 
....................     i = read_adc();                     
004D:  BSF    1F.2
004E:  BTFSC  1F.2
004F:  GOTO   04E
0050:  BSF    03.5
0051:  MOVF   1E,W
0052:  BCF    03.5
0053:  MOVWF  20
0054:  MOVF   1E,W
0055:  MOVWF  21
....................     set_pwm1_duty(i);                    
0056:  MOVF   21,W
0057:  MOVWF  79
0058:  MOVF   20,W
0059:  MOVWF  78
005A:  RRF    79,F
005B:  RRF    78,F
005C:  RRF    79,F
005D:  RRF    78,F
005E:  RRF    79,F
005F:  MOVF   78,W
0060:  MOVWF  15
0061:  RRF    79,F
0062:  RRF    79,W
0063:  ANDLW  30
0064:  MOVWF  77
0065:  MOVF   17,W
0066:  ANDLW  CF
0067:  IORWF  77,W
0068:  MOVWF  17
....................     delay_ms(10);                        
0069:  MOVLW  0A
006A:  MOVWF  23
006B:  CALL   004
006C:  GOTO   04D
....................    } 
.................... } 
006D:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
